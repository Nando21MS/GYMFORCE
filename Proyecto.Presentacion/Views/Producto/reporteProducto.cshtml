@model IEnumerable<Proyecto.Presentacion.Models.Producto>

@{
    ViewData["Title"] = "Reporte Producto";
    Layout = "~/Views/Shared/_LayoutPrincipal.cshtml";
}

<h1 class="text-center my-4">Reporte Producto</h1>

<div class="container">
    <form asp-controller="Producto" asp-action="reporteProducto" method="get" class="mb-4">
        <div class="row mb-3">
            <div class="col-md-3">
                <label for="nombre" class="form-label">Nombre Producto:</label>
                <input type="text" id="nombre" name="nombre" value="@ViewBag.CurrentFilterNombre" class="form-control" />
            </div>
            <div class="col-md-3">
                <label for="id_categoria" class="form-label">Categoría:</label>
                @Html.DropDownList("id_categoria", (SelectList)ViewBag.categoria, "(Seleccione una Categoría)", new { @class = "form-control" })
            </div>
            <div class="col-md-3">
                <label for="stock" class="form-label">Stock:</label>
                <input type="text" id="stock" name="stock" value="@ViewBag.CurrentFilterStock" class="form-control" />
            </div>
            <div class="col-md-3">
                <label for="id_proveedor" class="form-label">Proveedor:</label>
                @Html.DropDownList("id_proveedor", (SelectList)ViewBag.proveedor, "(Seleccione un Proveedor)", new { @class = "form-control" })
            </div>
        </div>
        <div class="row mb-3">
            <div class="col-md-4">
                <button type="submit" class="btn btn-primary">Filtrar</button>
            </div>
            <div class="col-md-4">
                <button type="button" id="btnGenerarExcel" class="btn btn-secondary" onclick="generarExcel()">Generar Excel</button>
            </div>
            <div class="col-md-4">
                <button type="button" class="btn btn-secondary" onclick="limpiarCampos()">Limpiar</button>
            </div>
        </div>
    </form>

    <table class="table table-striped table-bordered">
        <thead class="table-dark">
            <tr>
                <th>@Html.DisplayNameFor(model => model.id_producto)</th>
                <th>@Html.DisplayNameFor(model => model.nom_prod)</th>
                <th>@Html.DisplayNameFor(model => model.des_prod)</th>
                <th>@Html.DisplayNameFor(model => model.nom_cat)</th>
                <th>@Html.DisplayNameFor(model => model.pre_prod)</th>
                <th>@Html.DisplayNameFor(model => model.stock)</th>
                <th>@Html.DisplayNameFor(model => model.raz_soc)</th>
                <th>@Html.DisplayNameFor(model => model.foto_prod)</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.id_producto)</td>
                    <td>@Html.DisplayFor(modelItem => item.nom_prod)</td>
                    <td>@Html.DisplayFor(modelItem => item.des_prod)</td>
                    <td>@Html.DisplayFor(modelItem => item.nom_cat)</td>
                    <td>@Html.DisplayFor(modelItem => item.pre_prod)</td>
                    <td>@Html.DisplayFor(modelItem => item.stock)</td>
                    <td>@Html.DisplayFor(modelItem => item.raz_soc)</td>
                    <td><img style="width:60px; height:70px" src="~/img/@Url.Content(item.foto_prod)" /></td>
                </tr>
            }
        </tbody>
    </table>
</div>

<form id="formExcel" asp-controller="Producto" asp-action="GenerarExcel" method="post" style="display: none;">
    <input type="hidden" id="nombreExcel" name="nombre" />
    <input type="hidden" id="categoriaExcel" name="id_categoria" />
    <input type="hidden" id="stockExcel" name="stock" />
    <input type="hidden" id="proveedorExcel" name="id_proveedor" />
</form>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    function limpiarCampos() {
        document.getElementById("nombre").value = "";
        document.getElementById("id_categoria").selectedIndex = 0;
        document.getElementById("stock").value = "";
        document.getElementById("id_proveedor").selectedIndex = 0;
        habilitarBotonGenerarExcel(false); // Deshabilita el botón al limpiar campos
    }

    function generarExcel() {
        // Copia los valores de los campos de filtrado al formulario oculto para generar Excel
        document.getElementById("nombreExcel").value = document.getElementById("nombre").value;
        document.getElementById("categoriaExcel").value = document.getElementById("id_categoria").value;
        document.getElementById("stockExcel").value = document.getElementById("stock").value;
        document.getElementById("proveedorExcel").value = document.getElementById("id_proveedor").value;

        // Envía el formulario oculto para generar Excel
        document.getElementById("formExcel").submit();
    }

    function mostrarAlertaSiTablaVacia() {
        var tabla = document.querySelector('.table');
        var filas = tabla.querySelectorAll('tbody tr');

        if (filas.length === 0) {
            Swal.fire({
                icon: 'info',
                title: 'No hay productos',
                text: 'No hay productos para mostrar.',
            });
            habilitarBotonGenerarExcel(false); // Deshabilita el botón si la tabla está vacía
        } else {
            habilitarBotonGenerarExcel(true); // Habilita el botón si hay productos en la tabla
        }
    }

    // Llama a la función al cargar la página
    window.onload = function () {
        mostrarAlertaSiTablaVacia();
    };

    // Función para habilitar o deshabilitar el botón de generar Excel
    function habilitarBotonGenerarExcel(habilitar) {
        var botonExcel = document.getElementById("btnGenerarExcel");
        if (botonExcel) {
            botonExcel.disabled = !habilitar;
        }
    }
</script>
